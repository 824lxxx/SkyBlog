version: "3"
services:
  mysql:
    image: mysql:5.7.27
    ports:
      - 3306:3306
    environment: # 指定用户root的密码
      - MYSQL_ROOT_PASSWORD=admin
  redis:
    image: redis:latest
    command: redis-server --requirepass 1234
    restart: always
    volumes:
      - redis-data:/data
  vueblog:
    image: vueblog:latest
    build: . # 表示以当前目录下的Dockerfile开始构建镜像
    ports:
      - 8083:8083
    depends_on: # 依赖与mysql、redis，其实可以不填，默认已经表示可以
      - mysql
      - redis
  nginx: # 服务名称，用户自定义
    image: nginx:latest  # 镜像版本
    ports:
      - 443:443  # 暴露端口
      - 80:80
    volumes: # 挂载
      - /root/nginx/html:/usr/share/nginx/html
      - /root/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /root/nginx/cert:/etc/nginx/cert
    privileged: true # 这个必须要，解决nginx的文件调用的权限问题
    links:
      - "vueblog:vueblogProgram"
      - "rsshub:rss"
    depends_on:
      - vueblog
      - rsshub
    rsshub:
      image: diygod/rsshub
      restart: always
      ports:
        - '1200:1200'
      environment:
        NODE_ENV: production
        CACHE_TYPE: redis
        REDIS_URL: 'redis://redis:6379/'
        PUPPETEER_WS_ENDPOINT: 'ws://browserless:3000'
      depends_on:
        - redis
        - browserless
      browserless:
        # See issue 6680
        image: browserless/chrome:1.43-chrome-stable
        restart: always
volumes:
  redis-data:
